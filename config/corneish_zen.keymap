#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NAV_L 1
#define OTH_L 2
#define NUM_L 3
#define SYM_L 4
#define MED_L 5
#define FUN_L 6

/ {
  chosen {
    //zmk,matrix_transform = &default_transform;
    zmk,matrix_transform = &five_column_transform;
  };
};

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {

   combos {
        compatible = "zmk,combos";

        med_mo {
	    timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo MED_L>;
        };

        fn_mo {
	    timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo FUN_L>;
        };
	
        combo_cut {
            timeout-ms = <50>;
            key-positions = <21 23>;
            bindings = <&kp LC(X)>;
        };  
	
        combo_copy {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp LC(C)>;
        };  
	
        combo_paste {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&mt LS(LC(V)) LC(V)>;
        }; 
        combo_bs_left {
            timeout-ms = <50>;
            key-positions = <5 6>;
            layers = <0>;
            bindings = <&kp LC(BSPC)>;
        }; 
	
       combo_lpar {
            timeout-ms = <50>;
            key-positions = <12 13>;
            layers = <0>;
            bindings = <&kp LPAR>;
        };  
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <16 17>;
            layers = <0>;
            bindings = <&kp RPAR>;
        };  
        combo_rbrac {
            timeout-ms = <50>;
            key-positions = <17 18>;
            layers = <0>;
            bindings = <&mt RBRC RBKT>;
        }; 
        combo_lbrac {
            timeout-ms = <50>;
            key-positions = <11 12>;
            layers = <0>;
            bindings = <&mt LBRC LBKT>;
        };
        combo_lpar_veritcal {
            timeout-ms = <50>;
            key-positions = <3 13>;
            layers = <0>;
            bindings = <&kp LPAR>;
        };  
        combo_rpar_vertical {
            timeout-ms = <50>;
            key-positions = <6 16>;
            layers = <0>;
            bindings = <&kp RPAR>;
        };  
        combo_rbrac_vertical {
            timeout-ms = <50>;
            key-positions = <7 17>;
            layers = <0>;
            bindings = <&mt RBRC RBKT>;
        }; 
        combo_lbrac_vertical {
            timeout-ms = <50>;
            key-positions = <2 12>;
            layers = <0>;
            bindings = <&mt LBRC LBKT>;
        }; 
	
       combo_eq_vertical {
            timeout-ms = <50>;
            key-positions = <4 14>;
            layers = <0>;
            bindings = <&mt EQUAL PLUS>;
        };	
       combo_cap_word{
            timeout-ms = <50>;
            key-positions = <16 13>;
            layers = <0>;
            bindings = <&caps_word>;
        };
    };


    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q     &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &hm LGUI A &hm LALT S &hm LSHFT D &hm LCTRL F    &kp G         &kp H            &hm RCTRL J  &hm RSHFT K &hm LALT L &hm LGUI QUOT
                &kp Z      &kp X      &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH
                                            &kp LSHFT      &lt NAV_L SPACE  &lt OTH_L TAB &lt NUM_L BKSP  &lt SYM_L RET &kp RSHFT  
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp LARW       &kp DARW    &kp UARW   &kp RARW
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &kp PG_DN   &kp PG_UP  &kp END
                                             &trans       &trans          &trans       &kp ESC          &kp DEL &trans  
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                             &trans       &trans          &trans       &trans           &trans &trans  
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &kp LBKT   &kp N7     &kp N8      &kp N9          &kp RBKT      &trans          &trans         &trans      &trans     &trans
                &kp SEMI   &kp N4     &kp N5      &kp N6          &kp EQUAL     &trans          &trans         &trans      &trans     &trans
                &kp GRAVE  &kp N1     &kp N2      &kp N3          &kp BSLH      &trans          &trans         &trans      &trans     &trans
                                         &trans           &kp N0          &kp MINUS     &trans          &trans &trans  
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC        &trans &trans   &trans    &trans    &trans
                &kp COLON    &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS        &trans &trans   &trans    &trans    &trans
                &kp TILDE    &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(BSLH)    &trans &trans   &trans    &trans    &trans
                                       &trans              &kp LS(N0) &kp UNDER         &trans &trans &trans  
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                                       &trans             &trans          &trans       &kp C_STOP       &kp C_PLAY_PAUSE &trans  
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
                &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans      &trans     &trans
                &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
                                           &trans          &none      &none             &trans          &trans &trans  
            >;
        };
        };
};
